<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.wwz.bookSystem.mapper.BookMapper">

	<!-- 缓存配置 -->
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache" >  
      <property name="timeToIdleSeconds" value="3600"/>
      <property name="timeToLiveSeconds" value="3600"/>
      <property name="maxEntriesLocalHeap" value="1000"/>  
      <property name="maxEntriesLocalDisk" value="10000000"/>  
      <property name="memoryStoreEvictionPolicy" value="LRU"/>  
  	</cache>
  	
  	<!-- 关联实体类 -->
	<resultMap type="Book" id="bookAndTagMap">  
        <id property="id" column="id" />  
        <result property="name" column="name" />  
        <result property="author" column="author" />
        <result property="publisher" column="publisher" />  
        <result property="pubdate" column="pubdate" />  
        <result property="isbn" column="isbn" />
        <result property="imagePath" column="imagePath" />
        <result property="borrowNum" column="borrowNum" />
        <result property="stock" column="stock" />
        <result property="summary" column="summary" />
        <collection property="tags" ofType="Tag">  
            <id property="id" column="tid" />  
            <result property="name" column="tname" />  
        </collection>  
    </resultMap>  
  	
  	<!-- 添加图书 -->
	<insert id="addBook" parameterType="Book" useGeneratedKeys="true" keyProperty="id">
    	insert into book(name,author,publisher,pubdate,isbn,imagePath,summary) 
    	values(#{name},#{author},#{publisher},#{pubdate},#{isbn},#{imagePath},#{summary})	
    </insert>
    
    <!-- 为图书添加标签 -->
    <insert id="addTagToBook" parameterType="map">
    	insert into tagbook(tag_id,book_id)
    	values
    	<foreach collection="tagIds" item="tag_id" separator=",">
    		(#{tag_id},#{book_id})
    	</foreach>
    </insert>
    
    <!-- 删除图书 -->
    <delete id="deleteBook" parameterType="int">
    	delete from book
    	where id=#{id}
    </delete>
    
    <!-- 通过图书ID删除tagBook表中的对应关系 -->
    <delete id="deleteTagBookByBookId" parameterType="int">
    	delete from tagbook
    	where book_id=#{id}
    </delete>
    
    <!-- 修改图书 -->
    <update id="updateBook" parameterType="Book">
    	update book 
    	set name=#{name},author=#{author},publisher=#{publisher},pubdate=#{pubdate},
    		imagePath=#{imagePath},summary=#{summary},stock=#{stock},borrowNum=#{borrowNum}
    	where id=#{id}
    </update>
    
    <!-- 查询所有图书分类 -->
    <select id="listAllBook" resultType="Book">
    	select * from book
    </select>
    
    <!-- 通过ID查询图书 -->
    <select id="selectBookById" parameterType="int" resultMap="bookAndTagMap">
    	select b.*,t.id tid,t.name tname
		from book b 
		left join tagbook tb on b.id=tb.book_id
		left join tag t on tb.tag_id=t.id
    	where b.id=#{id}
    </select>

    <!-- 通过标签ID查询书籍集合 -->
    <select id="selectBookByTagId" parameterType="int" resultType="Book">
    	select b.* from book b,tagbook tb
		where b.id=tb.book_id and tb.tag_id=#{id}
    </select>
  	
</mapper>